apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ozone-deploy-
spec:
  entrypoint: run-deploy
  arguments:
    parameters:
      - name: org
        value: apache
      - name: repo
        value: hadoop
      - name: branch
        value: trunk
      - name: notify
        value: "false"
      - name: update-github-status
        value: "false"
  templates:
    - name: run-deploy
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: build
            dependencies: ["checkout"]
            template: build
            arguments:
              artifacts:
                - name: source
                  from: "{{tasks.checkout.outputs.artifacts.source}}"
          - name: deploy
            dependencies: ["build"]
            template: deploy
            arguments:
              artifacts:
                - name: kubernetes
                  from: "{{tasks.build.outputs.artifacts.kubernetes}}"
    - name: checkout
      inputs:
        artifacts:
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      outputs:
        artifacts:
          - name: source
            path: /tmp/src
          - name: log
            path: /tmp/log
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - bash
          - -x
          - -c
          - git clone --depth=1 https://github.com/{{workflow.parameters.org}}/{{workflow.parameters.repo}}.git --branch {{workflow.parameters.branch}} /tmp/src && git -C  /tmp/src log -1 > $(dirname $OUTPUT_DIR)/HEAD.txt && rm -rf  /tmp/src/hadoop-tools /tmp/src/hadoop-yarn-project /tmp/src/hadoop-mapreduce-project /tmp/src/hadoop-submarine /tmp/src/hadoop-common-project/hadoop-common/dev-support
        env:
          - name: TEST_TYPE
            value: checkout
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "false"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret

    - name: build
      inputs:
        artifacts:
          - name: source
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      outputs:
        artifacts:
          - name: log
            path: /tmp/log
          - name: kubernetes
            path: /workdir/hadoop-ozone/dist/target/ozone-0.5.0-SNAPSHOT/kubernetes
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
          - mvn
          - clean
          - install
          - "-f"
          - pom.ozone.xml
          - "-Ddocker.image=elek/ozone:asd"
          - "-Pdocker-build"
          - "-DskipTests"
        env:
          - name: TEST_TYPE
            value: build
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 2048Mi
            cpu: 2
      sidecars:
        - name: dind
          image: docker:17.10-dind # Docker already provides an image for running a Docker daemon
          securityContext:
            privileged: true # the Docker daemon can only run in a privileged container
          # mirrorVolumeMounts will mount the same volumes specified in the main container
          # to the sidecar (including artifacts), at the same mountPaths. This enables
          # dind daemon to (partially) see the same filesystem as the main container in
          # order to use features such as docker volume binding.
          mirrorVolumeMounts: true
    - name: deploy
      inputs:
        artifacts:
          - name: kubernetes
            path: /workdir
          - name: tools-source
            path: /tools
            git:
              repo: "https://github.com/elek/argo-ozone.git"
              revision: "master"
      outputs:
        artifacts:
          - name: log
            path: /tmp/log
      container:
        image: elek/ozone-build:test
        imagePullPolicy: Always
        command: ["/tools/scripts/test-executor.sh"]
        args:
           - /tools/scripts/deploy.sh
        env:
          - name: TEST_TYPE
            value: build
          - name: WORKFLOW_NAME
            value: "{{workflow.name}}"
          - name: UPDATE_GITHUB_STATUS
            value: "{{workflow.parameters.update-github-status}}"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: secret
        resources:
          requests:
            memory: 2048Mi
            cpu: 1

 
